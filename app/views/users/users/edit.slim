- if @current_user.first_login?
  .row.box.welcome
    .col-xs-12.diinner-label.pink
      .col-xs-8.col-xs-offset-2
        h2
          = t("welcome")
        .text-left
          = t("welcome_explanation")

.separator
= simple_form_for @current_user do |f|
  .row.box
    .col-xs-12.diinner-label.yellow
      = t("your_data")
    .separator
    .col-xs-12.col-md-8.col-md-offset-2
      = f.input :gender, collection: [[t('female'), 'female'], [t('male'), 'male']], include_blank: false, label:  t("gender")
      .sr-only
        = f.input :birth, value: nil
      .form-date
        = simple_fields_for :fake do |o|
          = o.input :birth, as: :date, label: t("birth"), start_year: Date.today.year - 70, end_year: Date.today.year - 18, order: [:day, :month, :year], required: false, include_blank: true
    .separator
  .separator
  .row.box.bottom-box
    .col-xs-12.diinner-label.yellow
      = t("your_preferences")
    .separator
    .col-xs-12.diinner-info.text-center
      = t("preferences_info")
    .separator
    .col-xs-12.col-md-8.col-md-offset-2
      = f.simple_fields_for :preference do |c|
        .input-group.age-slider
          label.select.optional.control-label style="display: block;" for="age" = t("age")
          .age-span
            span#min-age-selected
          input id="age" data-slider-id="age-slider" class="age-selector" type="text" class="span2" value="" data-slider-min="18" data-slider-max="65" data-slider-step="1"
          .age-span
            span#max-age-selected
        = c.input :max_age, label: false, as: :hidden
        = c.input :min_age, label: false, as: :hidden
        label = t("expectations")
        = render '/users/after_plan', f: c
        label = t("preferred_price")
        .choosing-box
          .col-lg-4.no-padding
            .text.long.price-toggle class="#{@user.menu_range.nil? || @user.menu_range == Preference::MENU_RANGE[0] ? 'selected': ''}" data-price="#{Preference::MENU_RANGE[0]}" 
              = t(Preference::MENU_RANGE[0])
              .explanation = "hasta #{PRICES_RANGES["lowcost"]["max"]}" + t("#{Preference::MENU_RANGE[0]}_explanation")
          .col-lg-4.no-padding
            .text.long.price-toggle class="#{@user.menu_range == Preference::MENU_RANGE[1] ? 'selected': ''}"  data-price="#{Preference::MENU_RANGE[1]}"  
              = t(Preference::MENU_RANGE[1])
              .explanation = "de #{PRICES_RANGES["regular"]["min"]} a #{PRICES_RANGES["regular"]["max"]}" + t("#{Preference::MENU_RANGE[1]}_explanation")
          .col-lg-4.no-padding
            .text.long.last.price.price-toggle class="#{@user.menu_range == Preference::MENU_RANGE[2] ? 'selected': ''}" data-price="#{Preference::MENU_RANGE[2]}"
              = t(Preference::MENU_RANGE[2])
              .explanation = "desde #{PRICES_RANGES["premium"]["min"]}" + t("#{Preference::MENU_RANGE[2]}_explanation")
        .price hidden=true
          = c.input :menu_range, :collection => Preference::MENU_RANGE.map{ |s| [s.capitalize, s] }, :include_blank => false
        = c.association :city, :include_blank => false, label:  t("preferred_city")
        .last-minute-info.col-xs-12.diinner-info
          .col-xs-10.col-xs-offset-1.text-left
            = t("city_info")
        .col-xs-12.compatibility-info
          .col-xs-10.col-xs-offset-1.text-left
          = c.input :use_photo_for_compatibility, as: :boolean, label: t("use_photo_for_compatibility")
  - unless @current_user.first_login?
    .text-right.drop-out-wrapper
      = link_to t("drop_out"), "#", class: "drop-out", id:"ask-cancel"
      .hidden
        = link_to t("hidden_drop_out"), user_drop_out_path(@current_user), class: "drop-out", id:"cancel_account"
      .separator.visible-xs
  .text-center
    - if @current_user.first_login?
      p
        |Al guardar los datos est√°s aceptando las
        =< link_to "condiciones de uso", terms_path, target: "_blank"
        |.
    = f.button :submit, @current_user.first_login? ? t("continue_button") : t("update_button"), class: "diinner-button pink floater"

- if !@current_user.first_login?
    javascript:
      $("#fake_birth_3i").val("#{@user.birth.day}");
      $("#fake_birth_2i").val("#{@user.birth.month}");
      $("#fake_birth_1i").val("#{@user.birth.year}");

javascript:
  $(document).ready(function () {
    // With JQuery
    //data-slider-value="[20,30]"

    $('#min-age-selected').text($("#user_preference_attributes_min_age").val());
    $('#max-age-selected').text($("#user_preference_attributes_max_age").val());

    var value = [parseInt($("#user_preference_attributes_min_age").val()), parseInt($("#user_preference_attributes_max_age").val())];

    var range = $("#age").slider({value: value}).data('slider');

    range.on('slideStop', function (ev) {
      $('#user_preference_attributes_max_age').val(range.getValue()[0]);
      $('#user_preference_attributes_min_age').val(range.getValue()[1]);
      $('#min-age-selected').text(range.getValue()[0]);
      $('#max-age-selected').text(range.getValue()[1]);
    });
    $(".price-toggle").click(function () {
      $(".price-toggle").removeClass("selected");
      $(this).addClass("selected");
      $(".price select").val($(this).data("price"));
    });

    $(".form-date select").on("change", function () {
      var day = $("#fake_birth_3i").val();
      var month = $("#fake_birth_2i").val();
      var year = $("#fake_birth_1i").val();
      var date = year + "-" + fixDigits(month) + "-" + fixDigits(day);
      if (day != "" && month != "" && year != "") {
        $("#user_birth").val(date);
      }
    });
  });


  $("#ask-cancel").click(function () {
    openModal("confirm-modal");
  });

  $("#true").click(function () {
    $("#cancel_account").click();
  });
  $("#false").click(function () {
    closeModal("confirm-modal");
  }).addClass("button-calm");
