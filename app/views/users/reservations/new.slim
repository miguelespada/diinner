= simple_form_for [@user, @reservation], url: user_search_tables_path, html: {id: 'reservation-form'}  do |f|
  .row.box.bottom-box
    - if alert
      .diinner-label.pink
        = alert
    .col-xs-12.diinner-label.yellow
      = t("new_reservation")
    .separator
    .col-xs-12.col-md-8.col-md-offset-2
      = f.error_notification
      label = t("preferred_date")
      .choosing-box
        .col-lg-4.no-padding
          .text.long.day-toggle data-day="today" = t("today")
        .col-lg-4.no-padding
          .text.long.day-toggle.selected data-day="tomorrow" = t("tomorrow")
        .col-lg-4.no-padding
          .text.long.last.day-toggle data-day="date" = t("other_date")
      .fake-date hidden=true
        = simple_fields_for :fake do |o|
          = o.input :date, :as => :date, label: t("date_name"), start_year: Date.tomorrow.year, end_year: (Date.today + 15.days).year, order: [:day, :month, :year]
      .date.form-date hidden=true
        = f.input :date, :as => :date, label: t("date_name"), html5: true, input_html: { min: Date.tomorrow + 1.day, max: Date.tomorrow + 15.days}
      .last-minute-info.col-xs-12.diinner-info hidden=true
        .col-xs-10.col-xs-offset-1.text-left
          = t("last_minute")
      = f.input :city, collection: City.all, :include_blank => false, :selected => (@user.city.nil? ? "" : @user.city.id), label: t("preferred_city")
      .last-minute-info.col-xs-12.diinner-info
        .col-xs-10.col-xs-offset-1.text-left
          = t("city_info")
      .separator
      label = t("preferred_price")
      .choosing-box
        - Preference::MENU_RANGE.each_with_index do |menu_range, i|
          .col-lg-4.no-padding
            .text.long.price-toggle class="#{(@user.menu_range.nil? && i == 0) || @user.menu_range == menu_range ? 'selected': ''}" data-price="#{menu_range}"
              = t(menu_range)
              - if menu_range == :lowcost
                .explanation = "hasta #{PRICES_RANGES["lowcost"]["max"]}" + t("lowcost_explanation")
              - elsif menu_range == :regular
                .explanation = "de #{PRICES_RANGES["regular"]["min"]} a #{PRICES_RANGES["regular"]["max"]}" + t("regular_explanation")
              - else
                .explanation = "desde #{PRICES_RANGES["premium"]["min"]}" + t("premium_explanation")
        .separator
      .price hidden=true
        = f.input :price, :collection => Preference::MENU_RANGE.map{ |s| [s.capitalize, s] }, :include_blank => false, :selected => (@user.menu_range.nil? ? :lowcost : @user.menu_range)
      .friends-question
        label.control-label = t("friends")
        .company.choosing-box
          .text.company-toggle.selected data-company=0 = t("go_alone")
          .text.company-toggle data-company=1 = t("go_with_friends")
        .company-container hidden=true
          .mini-title = t("how_many")
          .choosing-box
            .text.toggle data-number=1 1
            .text.toggle data-number=2 2
          = f.simple_fields_for :companies do |company|
            = render 'company_fields', :f => company
      label = t("preferred_expectations")
      = render '/users/after_plan', f: f
    .separator



  .text-center
    = f.button :submit, t("search_tables"), class: 'diinner-button pink floater', id: 'search-button'
javascript:
  $(document).ready(function () {

    $("#search-button").click(function(){
      openModal("loading-modal");
    });

    var currentDate = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
    $("#reservation_date").val(currentDate.toISOString().substring(0, 10));
    $("#fake_date_3i").val(currentDate.getDate());
    $("#fake_date_2i").val(currentDate.getMonth() + 1);
    $("#fake_date_1i").val(currentDate.getFullYear());

    $(".company-toggle").click(function () {
      $(this).siblings().removeClass("selected");
      $(this).addClass("selected");
      $(this).data("company") == true ? $(".company-container").show() : $(".company-container").hide();
    });

    $(".fake-date select").on("change", function(){
      console.log("Date changed");
      var day = $("#fake_date_3i").val();
      var month = $("#fake_date_2i").val();
      var year = $("#fake_date_1i").val();
      var date = year + "-" + fixDigits(month) + "-" + fixDigits(day);
      $("#reservation_date").val(date);
    });

    $(".day-toggle").click(function () {

      $(".day-toggle").removeClass("selected");
      $(this).addClass("selected");
      $("#reservation-form").attr("action", "#{user_search_tables_path}");
      $(".fake-date").hide();
      $(".last-minute-info").hide();

      switch ($(this).data("day")) {
        case "date":
          var currentDate = new Date(new Date().getTime() + 2*24 * 60 * 60 * 1000);
          $("#reservation_date").val(currentDate.toISOString().substring(0, 10));
          $(".fake-date").show();
          $(".friends-question").show();
          break;
        case "today":
          $("#reservation-form").attr("action", "#{user_search_last_minute_diinners_path}");
          var currentDate = new Date();
          $("#reservation_date").val(currentDate.toISOString().substring(0, 10));
          $(".last-minute-info").show();
          $(".friends-question").hide();
          break;
        case "tomorrow":
          $(".friends-question").show();
          var currentDate = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
          $("#reservation_date").val(currentDate.toISOString().substring(0, 10));
          break;
      }
    });

    $(".toggle").click(function () {
      $(".friend").hide();

      $(".toggle").removeClass("selected");
      $(this).addClass("selected");
      if ($(this).data("number") == 1) {
        $($(".friend")[0]).show();
      } else {
        $(".friend").show();
      }
    });

    $(".price-toggle").click(function () {
      $(".price-toggle").removeClass("selected");
      $(this).addClass("selected");
      $(".price select").val($(this).data("price"));
    });

    $(".friend-toggle").on("click", function (e) {
      $(this).siblings().removeClass("selected");
      $(this).addClass("selected");
      $($(this).parent().parent().parent().find(".gender")).val(($(this).data("gender")));
    });
  });
