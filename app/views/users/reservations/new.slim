= simple_form_for [@user, @reservation], url: user_search_tables_path, html: {id: 'reservation-form'}  do |f|
  .row.box.bottom-box
    .col-xs-12.diinner-label.yellow
      = t("new_reservation")
    .separator
    .col-xs-12.col-md-8.col-md-offset-2
      = f.error_notification
      label = t("preferred_date")
      .choosing-box
        .col-lg-4.no-padding
          .text.long.day-toggle data-day="today" = t("today")
        .col-lg-4.no-padding
          .text.long.day-toggle.selected data-day="tomorrow" = t("tomorrow")
        .col-lg-4.no-padding
          .text.long.last.day-toggle data-day="date" = t("other_date")
      .date.form-date hidden=true
        = f.input :date, :as => :date, label: t("date"), html5: true, input_html: { min: Date.tomorrow + 1.day, max: Date.tomorrow + 15.days}

      = f.input :city, collection: City.all, :include_blank => false, :selected => (@user.city.nil? ? "" : @user.city.id), label: t("preferred_city")
      label = t("preferred_price")
      .choosing-box
        .col-lg-4.no-padding
          .text.long.price-toggle class="#{@user.menu_range.nil? || @user.menu_range == Preference::MENU_RANGE[0] ? 'selected': ''}" data-price="#{Preference::MENU_RANGE[0]}"
            = t(Preference::MENU_RANGE[0])
            .explanation = t("#{Preference::MENU_RANGE[0]}_explanation")
        .col-lg-4.no-padding
          .text.long.price-toggle class="#{@user.menu_range == Preference::MENU_RANGE[1] ? 'selected': ''}" data-price="#{Preference::MENU_RANGE[1]}"
            = t(Preference::MENU_RANGE[1])
            .explanation = t("#{Preference::MENU_RANGE[1]}_explanation")
        .col-lg-4.no-padding
          .text.long.last.price.price-toggle class="#{@user.menu_range == Preference::MENU_RANGE[2] ? 'selected': ''}" data-price="#{Preference::MENU_RANGE[2]}"
            = t(Preference::MENU_RANGE[2])
            .explanation = t("#{Preference::MENU_RANGE[2]}_explanation")
      .price hidden=true
        = f.input :price, :collection => Preference::MENU_RANGE.map{ |s| [s.capitalize, s] }, :include_blank => false, :selected => (@user.menu_range.nil? ? :lowcost : @user.menu_range)
      .friends-question
        label.control-label = t("friends")
        .company.choosing-box
          .text.company-toggle.selected data-company=0 = t("go_alone")
          .text.company-toggle data-company=1 = t("go_with_friends")
        .company-container hidden=true
          h4 = t("how_many")
          .choosing-box
            .text.toggle data-number=1 1
            .text.toggle data-number=2 2
          = f.simple_fields_for :companies do |company|
            = render 'company_fields', :f => company
      label = t("preferred_expectations")
      = render '/users/after_plan', f: f
    .separator



  .text-center
    = f.button :submit,  t("search_tables"), class: 'diinner-button pink floater'
javascript:
  $(document).on('ready page:change', function () {
    var tomorrow = moment({hour: 21, minute: 00}).add(1, 'days');
    $('.datetimepicker').each(function () {
      $(this).data("DateTimePicker").date(tomorrow);
      $(this).data("DateTimePicker").minDate(tomorrow);
      $(this).data("DateTimePicker").maxDate(moment().add(30, 'days'));
    });

    $(".company-toggle").click(function () {
      $(this).siblings().removeClass("selected");
      $(this).addClass("selected");
      $(this).data("company") == true ? $(".company-container").show() : $(".company-container").hide();
    });

    $(".day-toggle").click(function () {

      $(".day-toggle").removeClass("selected");
      $(this).addClass("selected");
      $("#reservation-form").attr("action", "#{user_search_tables_path}");
      $(".date").hide();

      switch ($(this).data("day")) {
        case "date":
          $(".date").show();
          $(".friends-question").show();
          break;
        case "today":
          $("#reservation-form").attr("action", "#{user_search_last_minute_diinners_path}");
          $(".friends-question").hide();
          var currentDate = new Date();
          var day = currentDate.getDate();
          var month = currentDate.getMonth() + 1;
          var year = currentDate.getFullYear();
          $("#reservation_date").val(day + "/" + month + "/" + year);
          break;
        case "tomorrow":
          $(".friends-question").show();
          var currentDate = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
          var day = currentDate.getDate();
          var month = currentDate.getMonth() + 1;
          var year = currentDate.getFullYear();
          $("#reservation_date").val(day + "/" + month + "/" + year);
          break;
      }
    });

    $(".toggle").click(function () {
      $(".friend").hide();

      $(".toggle").removeClass("selected");
      $(this).addClass("selected");
      if ($(this).data("number") == 1) {
        $($(".friend")[0]).show();
      } else {
        $(".friend").show();
      }
    });

    $(".price-toggle").click(function () {
      $(".price-toggle").removeClass("selected");
      $(this).addClass("selected");
      $(".price select").val($(this).data("price"));
    });

    $(".friend-toggle").on("click", function (e) {
      console.log("Toggling friend");
      $(this).siblings().removeClass("selected");
      $(this).addClass("selected");
      $($(this).parent().parent().parent().find(".gender")).val(($(this).data("gender")));
    });
  });
